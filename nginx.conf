 
upstream rolaguard-backend {
        # localhost: address docker container and internal port:
        server backend:5000;        
}

server {
    listen      80 default_server;
    listen [::]:80 default_server;
   
    server_name localhost 127.0.0.1;

    server_tokens off;

    # nginx optimizations:
    client_body_buffer_size 10K;
    client_header_buffer_size 1k;
    client_max_body_size 8m;
    large_client_header_buffers 2 1k;
    client_body_timeout 12;
    client_header_timeout 12;
    keepalive_timeout 15;
    send_timeout 10;
    gzip             on;
    gzip_comp_level  9;
    gzip_min_length  1000;
    gzip_proxied     expired no-cache no-store private auth;
    gzip_types       text/plain application/x-javascript text/xml text/css application/xml application/json text/csv;
    location ~* .(jpg|jpeg|png|gif|ico|css|js)$ {
        expires 365d;
    }
    access_log off;

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

    location ~ ^/(|static)/ {
        set $cors "";
        if ($http_origin ~* (\.localhost/)) {

            set $cors "true";
        }
        if ($cors = "true") {
            add_header 'Access-Control-Allow-Origin' "$http_origin";
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, DELETE, PUT';
            add_header 'Access-Control-Allow-Credentials' 'true';
            add_header 'Access-Control-Allow-Headers' 'User-Agent,Keep-Alive,Content-Type';
        }
        # security headers
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload";
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-Frame-Options "DENY" always;
        # CSP
      add_header Content-Security-Policy "
	default-src 'self'
		https://www.google.com
        http://localhost/api/v1.0/login
		http://localhost/;
	script-src 'self' 'unsafe-inline'
    	http://localhost
		https://www.gstatic.com
		https://www.google.com
		https://maxcdn.bootstrapcdn.com
		https://ajax.googleapis.com
		https://developers.google.com
		https://maps.googleapis.com;
	img-src 'self'
		https://image.ibb.co
		https://simplecore.intel.com
		https://maps.gstatic.com
		https://maps.googleapis.com
		https://developers.google.com
		* data:;
	style-src 'self' 'unsafe-inline'
    	http://localhost/
		https://fonts.googleapis.com
		https://maxcdn.bootstrapcdn.com
		https://cdnjs.cloudflare.com
		https://maps.googleapis.com
		https://developers.google.com
		https://maps.googleapis.com/maps-api-v3/api/js/32/13e/common.js
		* data:;
	font-src 'self'
		https://use.fontawesome.com
		https://fonts.gstatic.com
		https://cdnjs.cloudflare.com
		data:
		https://fonts.gstatic.com
		https://maxcdn.bootstrapcdn.com
		https://cdnjs.cloudflare.com; 
	form-action 'self'; upgrade-insecure-requests;" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    }
    location /socket.io/ {
       # Configure NGINX to reverse proxy WSS requests to backend
       proxy_set_header Host $host;
       proxy_set_header X-Real-IP $remote_addr;
       proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
       proxy_set_header X-Forwarded-Proto $scheme;
       proxy_http_version 1.1;
       proxy_buffering off;
       proxy_set_header Upgrade $http_upgrade;
       proxy_set_header Connection "Upgrade";
       proxy_pass http://rolaguard-backend/socket.io/;
    }
    location /api/v1.0/ {
       # Configure NGINX to reverse proxy HTTP requests to backend API
       proxy_pass http://rolaguard-backend;
       proxy_redirect off;#
       proxy_set_header Host $host;
       proxy_set_header X-Real-IP $remote_addr;
       proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
       proxy_set_header X-Forwarded-Host $server_name;
       # Define the maximum file size on file uploads
       client_max_body_size 5M;#
    }
    location ~ ^/(recovery|activation|change_password|change_password_request)/ {
       # Configure NGINX to reverse proxy HTTP requests to backend API
       proxy_pass http://rolaguard-backend;
       proxy_redirect off;
       proxy_set_header Host $host;
       proxy_set_header X-Real-IP $remote_addr;
       proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
       proxy_set_header X-Forwarded-Host $server_name;
       # Define the maximum file size on file uploads
       client_max_body_size 5M;

       alias /usr/share/nginx/html/;
       try_files $uri /index.html;
    }
    root /usr/share/nginx/html;
    try_files $uri /index.html;
}
